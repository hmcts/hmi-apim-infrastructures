<policies>
    <inbound>
        <base />
        <choose>
            <when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "PIH")">
                <set-header name="Host" exists-action="override">
                    <value>#pihHost#</value>
                </set-header>
                <include-fragment fragment-id="hmi-cath-auth-token-generation" />
                <set-header name="Authorization" exists-action="override">
                    <value>@((String)context.Variables["pihAuthToken"])</value>
                </set-header>
                <set-header name="x-provenance" exists-action="override">
                    <value>@(context.Request.Headers.GetValueOrDefault("Source-System","unknown"))</value>
                </set-header>
                <rewrite-uri template="/" copy-unmatched-params="true" />
                <set-backend-service base-url="https://127.0.0.1/pip/data-management/publication" />
            </when>
            <when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "MOCK")">
                <mock-response status-code="201" content-type="application/json" />
            </when>
            <otherwise>
                <include-fragment fragment-id="hmi-invalid-destination-response" />
            </otherwise>
        </choose>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
        <choose>
            <when condition="@(context.Response.StatusCode == 401 || context.Response.StatusCode == 403)">
                <cache-remove-value key="pihAuth" />
                <include-fragment fragment-id="hmi-failed-destination-authentication-response" />
            </when>
        </choose>
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>